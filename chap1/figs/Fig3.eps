%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 555 351
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 555 351
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CUGNZL+Consolas
%!FontType1-1.0: CUGNZL+Consolas 1.0000.5.3200
14 dict begin/FontName /CUGNZL+Consolas def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid4 put
dup 34 /gid3 put
dup 35 /gid2 put
dup 36 /gid1 put
dup 37 /gid5 put
dup 38 /gid8 put
dup 39 /gid6 put
dup 40 /gid7 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -885 1 index div -619 2 index div 1387 3 index div 2071 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-885 -619 1387 2071}def
/UniqueID 4254286 def
currentdict currentfile eexec

8B326C7AFA520A9F8E4D0348E5B9BBF20BB3843827A6D25C27DFA476700AE3C0D9896F2B953BCBC263CF337329E0CD940DA8F3E90CBA35FD2CB1484FA3DF20E92C96EAF3541BFAB7EFE8CBC0B9B87EA9C520507824AB2EBA983D6FB3D09D638F0326C71BE74788D690DD1639C114CD8233E009A0C6A6D2D2507F250C4CAF17775C75993136EB841A609F4568AB756AF0C812DE642A9120A497719BB28C83E8A80A193A4BDA197C4E0F1291FFC0EE1CCBA210C6CAFB950DF59529385BDAA69AC5F018F1301DA632860933732CB8DD37DFBE5A952B91352284235C4CD1B70E621B66BE917406583DB31DDF9DCDA19FB08347542A4F21B09AFA98188B8A7C9487BACC1455D7C3ED4768889C71CF77E539C7AECB8B8AD8DFFB79DAECB9A64304218AE7C92280341C600D99D8A0026994327842066A86053F9E5D933ADA0D527D2068DE9618025A9621ADE69D6D72251B327783A8603D8B1BEBA05847380228308853FD50BC290304E8CA145910FFD861A0BD21FA7A081AD65F8704286EC219B659217CB17F912FBBAE97DF819220D2F5C2F57B7A97CD911A2BDDE675C30166026F40137621B1E771ACD252B6101F58834D4B7341542055ACF45D8FDD1EB5459CFDF47E1BB91A015E704AAE797E59A386565EB03A6F9EDBDFF44FEFEDBDC4AA06D550B02ED3B1EE16B49D2022255B30B6E3F26A809F5972EEAB1B9554FD8C7FE4D304EF0AADCD19742C55C19A8C4CC2D3AFC479D45EF06A95D23A94A37B5E1BB21D23A4773828B5DCEA2A563F31F0968C7FDB994B2DAD530E8045C8F9A6FF3C242C2DBFF9BE93E169C9F7C508FEF59F29BB3073E131E53BFB9A5A01396327E492F50546198005D10EE3FBA487D935425D559943AC10E28E0B31B55DEDF5E790699B4C87D8F1201D93AA5853E742A11AE41E05B58498B27A973462BAF988EAF8858043BD6734F5DA051FFA4157065FE39EC8383551A937AD8A17B6B4E693C941D9CFAAB50BF9D7F2DB25520E161AA912600B7970B0C8969FE88023758DD7E310EB14708801EBBAD9EA400C366F35DCC32C176E1D0AA5744512209865A467D8B23F5BDBEA11A8CB2366CECF1AD32EE9B620C44FBD6DDA86BE3E5C5EADD4E78CDAC5C064E088E5BAC0B561AF8899D113E17146F243D5F29FDA1B7AFD262320047B218BD23C65D9EED4D06A98A720A0F587A84A47CA28822828A2A9A662BA507B58548D724EBF2CC2E3E8032BD6B3D219624831296AD408ABA8AF24B568D855A3BEE095A5D247C90B7DBA7ADDA77B706EA5CC727FB4125D9306A780CCA4358CFC0EABE0B59DD440C8D2B5E4353B4737B252FB3762F3F7DF4908455C8934477F9CB1F88AE1BA05B277414EF6E1ACA6B63F68D8C92968A81ECD506B5AFCD1DE89CAAF2DACF2C45A7073C63EA79CD6DE348C539B9B5F73D3CCE5CC802C8890531D37ECDC0335

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CUGNZL+Consolas cguidfix
/F1.1/CUGNZL+Consolas renmfont
%RBIBeginFontSubset: OUYXEG+CenturyGothic
%!FontType1-1.0: OUYXEG+CenturyGothic 1.0000.2.3500
14 dict begin/FontName /OUYXEG+CenturyGothic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /a put
dup 35 /t put
dup 36 /space put
dup 37 /A put
dup 38 /parenleft put
dup 39 /N put
dup 40 /one put
dup 41 /comma put
dup 42 /two put
dup 43 /three put
dup 44 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -347 1 index div -628 2 index div 2360 3 index div 2170 5 -1 roll div]cvx def
/sfnts [<




1612111402042125332037361235340227262123B30131014A95D6F1BFFECFFEEDFEB9AA013176A6BECEB88AFEC36805BF354BFE8EFF00DDFEB0A08B26360119CBD5012E382A000100B40000053705BF0009007B404B370848034708032803270838030300030F08020900030F0802080307080856020314020203040205010709000501020600080704050306030102080309000365064A0B096500490A66AE182B4E10F44DED4E10F64DED1112173911121739003F3C3F3C11393911123939872E2B877DC43130005E5D5E5D717133113301113311230111B42003D29121FC3605BFFB9A0466FA410458FBA8000002006BFFE404D8045C0010001F00BE40311E4019061B400C1129080F1D03020200011011580C07010A10061958060B00100F1D0305025C014A2115690949206076182B4E10F44DED4E10F64DED1739003FED3F3F3FED11123939030E103C7DC43C3130184379401C1218070B172613251807155A00120B155A001608195A00140A115A01002B2B012B2B2B2B81810049547940101E1F0D0E1E0E1168051F0D1D68010E0F01103C2B002B81810049547940121A1C04051B251C041968041A051D6801040301103C2B002B2B8181011123350E01232200353400333216173505220E0115141E0133323E0135342604D88A58DB82E7FEB9014AE886D952FE5A75C67576C77273CE6FF90440FBC0BB6B6C014FF0EB014E7272C86B73D07473D27574C67CBDFE00000100570000028105D4000B006540320B00070A03080007090405010609040201060A030B0203040508060A000009900A06070A080B000102050606070D47474A04B8018FB2065C07BA018F00090178B30CA0CD182B10F6F4FDF44E456544EE11121739003F3F4DED3F1117390F0F0F0F313001331133152311231123353301168DDEDE8DBFBF05D4FE6C78FC3803C878000000000100000002599A154AB1245F0F3CF5001B080000000000A54B1EAB00000000B270A520FEA5FD8C0938087A0000000B000100000000000000010000080CFE3D0000098DFEA5FEA4093800010000000000000000000000000000000D060001000237000002F4010B02F4007C02370080046F0123046F003D046F004805EB003105F400B305EB00B40577006B02B600570000003B003B007300AD00D5010101800223029002FB034F03E2042B00010000000D00F2003C00460005000200100023003E000002F7077D00030001B80272B270371FB80271B35D371FDD410902670026001F026902670026001F02680267B2261F37B8026FB4B5C81F374F4117026B005F026B006F026B007F026B008F026B009F026B00AF026B0007026B02670026001F026A0267003C001F0267B35E161F4041350261005002610060026100700261000400000261001002610020026100300261000400D002
6100E0026100F00261000300000261001002610020026100300261000400C0026100D0026100E0026100F00261000400B0025700F0025700020000025700400257007002574054031018101920182019401840190609001800190208001400151014101504090014001502083F003F0102CF00CF01FF00FF01045F005F018F008F0104200020014F004F010400000001F000F0010471AD0A1F71AD4109FFB6000A0016015701760003001F01570176B4060316958EB80130B32216958EB80130B322168B7BB80133B340168B7BB80133B340168B7BB80133B340168B7BB80133400C401600464600000012150840BD01F201820183000D00DB0183B20D0009B8018EB270301F410901850070029A001F01840065029A001F017FB36FF63A16B80130B270251FB8012FB270271F410A012900F90BDA029A001601280069029A001F0123B36FC22E16B80122400A6FC22E16FC702E1FD95CB8029AB61FC570591FB669B80534400C1FB56FD332168D702E1F8C6FB80534B71F826FC22E167F69B80534B21F796FB801DAB36F1663F9B8029AB71F5D6FB12A165B6FB90598014DB21656F9B90BDA029AB216556FBB0B34029A0016018AB25E2D1FB80188B25E471FB80187B25E601FB8012BB25EA71FBD0127007A04A5010B00160121400A58F23D16FA5E541FF858B801E840127A16F758CE3416DA5E671FD658A92B16C27AB907BC01BCB716C058B12D16AB7AB90B9C029AB616945EBF1F9058B8029DB3A7167E7AB905CC014DB7166A58F23D16627AB803DCB3DE166158B8029A400D1F460046024605551409140990BE02770007009002760007009001A640530790E50790A507908007907507906C07906B07906407905A079057072408220820081E081C081A08180816081408120810080E080C080A0808080608040802080008000F1F2F1F3F1F6F1FBF1FEF1FF01F07C0B901F2000101B013034B024B5342014BB0C063004B6220B0F65323B8010A515AB005234201B0124B004B5442B0382B4BB8080052B0372B4BB008505B58B101018E59B00288B801005458B80119B101018E851BB0124358B900010125858D1BB9000101FF858D595901740073162B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18012B2B2B2B2B2B2B2B2B2B2B2B014B5079BC001F01500007001F0132B3071F68072B2B2B4B5379BC00900150000700900132B3079068072B2B2B181DB0964B5358B0AA1D59B0324B5358B0FF1D594BB0A753205C58B901F401F24544B901F301F245445958B902DB01F4455258B901F402DB4459594BB8010B53205C58B9006501F34544B9007001F345445958B904CE0065455258B9006504CE4459594BB8029A53205C58B9005C01F44544B9006901F445445958B90B5D005C455258B9005C0B5D4459594BB8029A53205C58B16F5C4544

00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/one 5 def
/two 6 def
/three 7 def
/A 8 def
/D 9 def
/N 10 def
/a 11 def
/t 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-347 -628 2360 2170}def
/UniqueID 4176420 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B71CCBEC8DADBFCB2CF6F614DCF0404E4678133CDA654CD39ADC4A8DD9DC9E199CA389B30944206E07CF8A5C059101AEF6303CCC81FAA6DA2ED922C04597F953C782CAFDD04D5C175553485C20D2166566CD98503AE37286DB92458492B9C15608045D4DEDA18E12FD91B60BE9118D299251BF4F6532ADE0A885F46BEC5B77BC4BFCEEE5F77E0A40567B061BA3D7D1AEC4FD26BC23715DEA9C935176EF90C4FCA60FC338F101FC00B6D1EA0D3C0D2ACAD0871DAA59B470BACE06DE778C557A696919BDB88591CC1C6CFBF8883DC4F83AB4072286B7B481B16068B9CB39C45556BE00F1AED216E2F57D376C575FE3F208006F48EA7978CF4E04B6E85A22FFABDCDE766979DE85E14EC44B05C381E3A24A2ED44D05FDFBDBB92FA0189A4C8A10AD9BA26AC3DAD41ECAC374440AF0CBA2F3D3569BEF6CED8EF7F5C5E57D8F3D2C5700D395D20AFC3A5C263D42FC7779F58411F2D7E5EADE319B4376270E2A7B920BE39EC59BF7D4E6DFE6EE466E295D6309FB6E773F523ED63A266EA41823ACB485331AB8315D1E04A8E520F5B7CB789691EB43FFD39D2B27A29AB9DD18ED41BDB226AAB70531B1C2A3257C211349DEB68E0065E2DD4541F4FF9365E70585DEBBAE32DE68F67C812BF947BD49F7AE107427E79E958376581CEC97FFB63CD034374F2015A2097B958776A210B81D5808F7C897A2B610377D67EEBA8A141EBB41EEC436B9EF77E34C305F3090733F9D815A3644310550C73DCD553266171A9CE8F06D

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/OUYXEG+CenturyGothic cguidfix
/F2.1/OUYXEG+CenturyGothic renmfont
%RBIBeginFontSubset: OOZGLF+CenturyGothic
%!FontType1-1.0: OOZGLF+CenturyGothic 1.0000.2.3500
14 dict begin/FontName /OOZGLF+CenturyGothic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /o put
dup 35 /d put
dup 36 /e put
dup 37 /space put
dup 38 /numbersign put
dup 39 /zero put
dup 40 /one put
dup 41 /n put
dup 42 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -347 1 index div -628 2 index div 2360 3 index div 2170 5 -1 roll div]cvx def
/sfnts [<




7819880D880E032F08010010182000B8026440381190FF2001090F20010820201C40005000020000100030000309000001081458050B1C580C0700201101B21869104A2211690849216085182B4E10F44DED4E10F64DEDE4113332003FED3FED5E5D5E5D5D11392F5E5D5E71FDE612393911333130437940201D1F1213060B1E250A261306115A001D0B205A001F201207145A001F091C5A012B2B01103C2B2B2B2B818181015D5D5D5D5D5D5D5D71717101170E02232000353437362120171617211E0133323E01132E0223220706070430763A98BE78FEF6FED47FA1010E0116A67602FC2E04EAAC539D6E401C6BB061A073542B01693E728C49015DDCCFA2CED395DFBEF33A600190708652674B960001009C00000451045C001800B6B8027540421A0AD50F01224005111E080216170F060B170A0A180A115805070006090C0A0B000102160417180B5CBF0ACF0ADF0A030A4A1A175CB018C018D018031849197B76182B4E10F45D4DED4E10F65D4DED1112173911123939003F3FED3F3C12393901380E103C3C313043794014061007250E0D0F0D020610060C5A010D08115A01002B012B2A2B810049547940161215030414151315020615031168051204166800030201103C2B002B2A8181015D0149441333153E0133321E011511231134272E0123220607061511239C8C54CC787ABD5A8B10198A6F7FC920148C0440C3706F7CD2DEFDD00207BC3F6C6DA87C51D7FE710000020068FFE404D5045C000D001B006F401743080E5800071558070B1969044A1D11690A491C6085182B4E10F44DED4E10F64DED003FED3FED313043794032011B1725132602250C261606195A011408115A001B01195A010F0D115A001805155A001209155A001A030E5A01100B0E5A012B2B2B2B012B2B2B2B2B2B2B2B81013217161514002322003534373617220215141E0133323E01353402029FFBA596FEC3F9FAFEC396A5FCAEFA72C27474C272FB045CB6A6E3E4FEAB0155E4E2A6B789FEFEB776CC6F6FCC76B7010200000100000002599A154AB1245F0F3CF5001B080000000000A54B1EAB00000000B270A520FEA5FD8C0938087A0000000B000100000000000000010000080CFE3D0000098DFEA5FEA4093800010000000000000000000000000000000B060001000237000005C300B802A80041046F0041046F012305EB00B4057B006D0533006804E1009C053D00680000003B003B01010124019B01C7021B02AB036003E3044A00010000000B00F2003C00460005000200100023003E000002F7077D00030001B80272B270371FB80271B35D371FDD410902670026001F026902670026001F02680267B2261F37B8026FB4B5C81F374F4117026B005F026B006F026B007F026B008F026B009F026B00AF026B0007026B02670026001F026A0267003C


00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/space 1 def
/numbersign 2 def
/hyphen 3 def
/zero 4 def
/one 5 def
/N 6 def
/d 7 def
/e 8 def
/n 9 def
/o 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-347 -628 2360 2170}def
/UniqueID 4176420 def
currentdict currentfile eexec

8B6542148C7F13300469CFAA1C34475F3014009F6AB85B69F8F80AA1619C71C18A7B404292D77EBCECE6F7B1DCED78E4B0BDCC42642C7841ACDD9BCE300FBAFFB9CC42A98E79DE611A7C90152850DC9AF1C835053EF239828E7C7917415777FC3B931698D24DB4B97FE6C6D08A68C2D582586FD7D43DF9896AA1EAD1A8029ABEB6EB5DA8A72777A37D0C2884D8CEF0521F465CF771DF302866A4D28D1F40DA82DA2A40FBDB4D099E0C768CFB0491D9233B48ED2D290C85A8A17C336E9CB5F6CC13A994983DECA38D6F094B212854925DE5FC54A3D0ED2A698C2AF5F645B032122740F9797853918FC7ADFD114C0876B8372E21E0FCA17065260B36814D137560761F025C4559C3CE661ECCF7F84BE78ABC5C3E2CF7CB98125B6B1516721CCC97A67896ED066512063BE91FA0E3F9D762A2CC3FB75FAA47A8220BEB1FF19DF3908C6812CC1625274239DDCF25838C906CB7EB81E05E42322BE2F0D77243FBF0271D06B680411863288FCAC9BFAB5123166C3E444FD26BEE73E0C031C8BD0D7FDF59D7D040B4C8E9DD6C66C5FDB0B61B43DFE0772FE4665DF8A82D78ABF30DD7353A8CD87BAD7A00E611F0E849CF3F16CA8AF1AE9CB8E054E7D437A980512635A53F8F0A31DDB5216DA86278C752DB7A24669DA345FDBA6B97B81D0B73113D559254E348A7E6C0F1FF6BAD9CB14A00AE93E36D35952478EC551E104CEF86978CA914D471F8ECD586FAA3D4CB36897AD5CE251106551D6F96ACB78D25FD25E8414B2428DF41340DE6D2DCF2F31ABD56B99567100157FE5888BB5A592B38AE58E376E50661A61622FD6C9F225EF0650A3803D84544CF0EB9F432FA66320B52ECD77014CA72C726B944521AEDB045B6DB685EC9648A7899FA3D583F3D726BF4113DAC4FA741A9AF30FC9090B2766973B1D358160FD61BE89A48DCA9C2B9042BC6C1FEA748CD2A5DD10492677E801B0274D573BE5630F83346D7E223E1B75C8A3A76C0CE903CECEAAB70FCF075BFE7385BAB8DD26AEB4D1D9C5C5CFF6D57B9778599EF9ACE3BC3CBD1A58B013FC787BCB6465850533DCB7E10096C946F070BB22E099A22DACCC20562D51D5CB5B9F4CE9CCF3AB875213182C65095EA2D352D03179595A2B5F2495F14FF52BD165FE7CD0E64D89A37DCB5DD9F5BB82115BED88DB7801C7FD61D6E8C8EACCAD123AEB3E99D12139CEB820C525F8C08AFADEDB85632A53F013ECA906A3E721F74A14FD1C00A6DB97E5BB9098F1F45CAC47C5882052453A8FFB671D1064F45C7FC2E8FF0E6182DCACDC98708409E4A16EDB4CB781A193121931F040AA74C462A4448
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/OOZGLF+CenturyGothic cguidfix
/F3.1/OOZGLF+CenturyGothic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.94901961 0.94901961 0.94901961 sc
q
4 4 547 343 rc
37.5 275.75 m
109.75 275.75 l
109.75 204.5 l
37.5 204.5 l
h
f
0.7647059 0.7647059 0.7647059 sc
109.75 275.75 m
133.5 299.5 l
133.5 228.25 l
109.75 204.5 l
h
f
0.96078432 0.96078432 0.96078432 sc
37.5 275.75 m
61.250031 299.5 l
133.5 299.5 l
109.75 275.75 l
h
f
12700 w
8 M
0.49803919 0.49803919 0.49803919 sc
0.00007874 0 0 -0.00007874 37.5 299.5 cm
0 301625.31 m
301625.31 0 l
1219200 0 l
1219200 904874.69 l
917574.69 1206500 l
0 1206500 l
h
0 301625.31 m
917574.69 301625.31 l
1219200 0 l
917574.69 301625.31 m
917574.69 1206500 l
S
1 1 1 sc
CM
24.5 173.5 m
140.5 173.5 l
140.5 86.833672 l
123.1664 69.5 l
24.5 69.5 l
h
f
0.80392158 0.80392158 0.80392158 sc
123.1664 69.5 m
126.633 83.366989 l
140.5 86.833672 l
h
f
0 0 0 sc
0.00007874 0 0 -0.00007874 24.5 173.5 cm
1253063 1320800 m
1297089 1144689 l
1473200 1100662 l
1253063 1320800 l
0 1320800 l
0 0 l
1473200 0 l
1473200 1100662 l
S
1 0 0 1 52.529411 -216 cm
/F1.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#)[ 6.625200 6.625200 0.000000 ] xS
1 0 0 1 72.404411 -216 cm
0 343 m
($)s
1 0 0 1 85.654411 -216 cm
0 343 m
(%&'\()[ 6.625200 6.625200 6.625200 0.000000 ] xS
1 0 0 1 12.399685 -28 cm
/F2.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#"$%&'\(\)$'*\)$'+,)[ 8.875200 8.251200 4.123200 8.251200 3.379200 8.875200 4.375200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 0.000000 ] xS
0 1 -1 0 374.11749 233 cm
0 343 m
('\()[ 8.875200 0.000000 ] xS
1 0 0 1 74.382843 -63 cm
0 343 m
('*)[ 8.875200 0.000000 ] xS
0.5 0.86602539 -0.86602539 0.5 334.46121 110.5 cm
0 343 m
('+)[ 8.875200 0.000000 ] xS
19050 w
[
76200
57150
] 0 d
0.00007874 0 0 -0.00007874 5 346 cm
0 336557.69 m
0 150682 150682.3 0 336558.31 0 c
1682742 0 l
1868618 0 2019300 150682 2019300 336557.69 c
2019300 3460742 l
2019300 3646618 1868618 3797300 1682742 3797300 c
336558.31 3797300 l
150682.3 3797300 0 3646618 0 3460742 c
h
S
1 0 0 1 43.269371 -324 cm
/F3.1[ 18 0 0 18 0 0]sf
0 343 m
(!"#$%&')[ 13.375800 11.755800 12.367800 11.755800 5.005800 12.997800 0.000000 ] xS
0.94901961 0.94901961 0.94901961 sc
CM
207.5 275.75 m
279.75 275.75 l
279.75 204.5 l
207.5 204.5 l
h
f
0.7647059 0.7647059 0.7647059 sc
279.75 275.75 m
303.5 299.5 l
303.5 228.25 l
279.75 204.5 l
h
f
0.96078432 0.96078432 0.96078432 sc
207.5 275.75 m
231.25 299.5 l
303.5 299.5 l
279.75 275.75 l
h
f
12700 w
[] 0 d
0.49803919 0.49803919 0.49803919 sc
0.00007874 0 0 -0.00007874 207.5 299.5 cm
0 301625.31 m
301625.31 0 l
1219200 0 l
1219200 904874.69 l
917574.69 1206500 l
0 1206500 l
h
0 301625.31 m
917574.69 301625.31 l
1219200 0 l
917574.69 301625.31 m
917574.69 1206500 l
S
1 1 1 sc
CM
194.5 173.5 m
310.5 173.5 l
310.5 86.833672 l
293.16641 69.5 l
194.5 69.5 l
h
f
0.80392158 0.80392158 0.80392158 sc
293.16641 69.5 m
296.633 83.366989 l
310.5 86.833672 l
h
f
0 0 0 sc
0.00007874 0 0 -0.00007874 194.5 173.5 cm
1253063 1320800 m
1297089 1144689 l
1473200 1100662 l
1253063 1320800 l
0 1320800 l
0 0 l
1473200 0 l
1473200 1100662 l
S
1 0 0 1 222.2307 -216 cm
/F1.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#)[ 6.625200 6.625200 0.000000 ] xS
1 0 0 1 242.1057 -216 cm
0 343 m
($)s
1 0 0 1 255.3557 -216 cm
0 343 m
(%&'\()[ 6.625200 6.625200 6.625200 0.000000 ] xS
1 0 0 1 182.101 -28 cm
/F2.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#"$%&'\(\)$'*\)$'+,)[ 8.875200 8.251200 4.123200 8.251200 3.379200 8.875200 4.375200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 0.000000 ] xS
0 1 -1 0 543.81891 233 cm
0 343 m
('\()[ 8.875200 0.000000 ] xS
1 0 0 1 244.0842 -63 cm
0 343 m
('*)[ 8.875200 0.000000 ] xS
0.5 0.86602539 -0.86602539 0.5 504.1626 110.5 cm
0 343 m
('+)[ 8.875200 0.000000 ] xS
19050 w
[
76200
57150
] 0 d
0.00007874 0 0 -0.00007874 175 346 cm
0 336557.69 m
0 150682 150682.3 0 336558.31 0 c
1682742 0 l
1868618 0 2019300 150682 2019300 336557.69 c
2019300 3460742 l
2019300 3646618 1868618 3797300 1682742 3797300 c
336558.31 3797300 l
150682.3 3797300 0 3646618 0 3460742 c
h
S
1 0 0 1 212.9707 -324 cm
/F3.1[ 18 0 0 18 0 0]sf
0 343 m
(!"#$%&\()[ 13.375800 11.755800 12.367800 11.755800 5.005800 12.997800 0.000000 ] xS
0.94901961 0.94901961 0.94901961 sc
CM
423.5 275.75 m
494.75 275.75 l
494.75 204.5 l
423.5 204.5 l
h
f
0.7647059 0.7647059 0.7647059 sc
494.75 275.75 m
518.5 299.5 l
518.5 228.25 l
494.75 204.5 l
h
f
0.96078432 0.96078432 0.96078432 sc
423.5 275.75 m
447.25 299.5 l
518.5 299.5 l
494.75 275.75 l
h
f
12700 w
[] 0 d
0.49803919 0.49803919 0.49803919 sc
0.00007874 0 0 -0.00007874 423.5 299.5 cm
0 301625 m
301625 0 l
1206500 0 l
1206500 904875 l
904875 1206500 l
0 1206500 l
h
0 301625 m
904875 301625 l
1206500 0 l
904875 301625 m
904875 1206500 l
S
1 1 1 sc
CM
410.5 173.5 m
526.5 173.5 l
526.5 86.833672 l
509.16641 69.5 l
410.5 69.5 l
h
f
0.80392158 0.80392158 0.80392158 sc
509.16641 69.5 m
512.633 83.366989 l
526.5 86.833672 l
h
f
0 0 0 sc
0.00007874 0 0 -0.00007874 410.5 173.5 cm
1253063 1320800 m
1297089 1144689 l
1473200 1100662 l
1253063 1320800 l
0 1320800 l
0 0 l
1473200 0 l
1473200 1100662 l
S
1 0 0 1 437.83829 -216 cm
/F1.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#)[ 6.625200 6.625200 0.000000 ] xS
1 0 0 1 457.71329 -216 cm
0 343 m
($)s
1 0 0 1 470.96329 -216 cm
0 343 m
(%&'\()[ 6.625200 6.625200 6.625200 0.000000 ] xS
1 0 0 1 397.70859 -28 cm
/F2.1[ 12 0 0 12 0 0]sf
0 343 m
(!"#"$%&'\(\)$'*\)$'+,)[ 8.875200 8.251200 4.123200 8.251200 3.379200 8.875200 4.375200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 3.379200 3.379200 8.875200 6.631200 0.000000 ] xS
0 1 -1 0 759.42639 233 cm
0 343 m
('\()[ 8.875200 0.000000 ] xS
1 0 0 1 459.69171 -63 cm
0 343 m
('*)[ 8.875200 0.000000 ] xS
0.5 0.86602539 -0.86602539 0.5 719.77008 110.5 cm
0 343 m
('+)[ 8.875200 0.000000 ] xS
19050 w
[
76200
57150
] 0 d
0.00007874 0 0 -0.00007874 391 346 cm
0 336557.69 m
0 150682 150682.3 0 336558.31 0 c
1682742 0 l
1868618 0 2019300 150682 2019300 336557.69 c
2019300 3460742 l
2019300 3646618 1868618 3797300 1682742 3797300 c
336558.31 3797300 l
150682.3 3797300 0 3646618 0 3460742 c
h
S
1 0 0 1 428.57831 -324 cm
/F3.1[ 18 0 0 18 0 0]sf
0 343 m
(!"#$%&\))[ 13.375800 11.755800 12.367800 11.755800 5.005800 12.997800 0.000000 ] xS
1 0 0 1 506.82831 -324 cm
0 343 m
(*)s
1 0 0 1 512.82831 -324 cm
0 343 m
(\()s
76200 w
[
76200
76200
] 0 d
0.00007874 0 0 -0.00007874 341 197 cm
0 0 m
583009 1 l
S
ep
end
